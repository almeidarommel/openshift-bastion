#!/bin/bash

OCP_LATEST_VERSION=$(curl -s ${OCP_BASEURL}/release.txt | grep 'Version: ' | awk '{print $2}')
OCP_API="api api-int"
OCP_APPS='*.apps'

echo "------------------!!Listing configured DNS names!!------------------"
echo "###########################"
for nodeName in ${MASTERS_DNS_NAMES} ${ETCD_DNS_NAMES} ${WORKERS_DNS_NAMES}
do
  echo "$nodeName.${CLUSTER_NAME}.${BASE_DOMAIN}"
done
echo "###########################"

for nodeType in `echo "masters etcds workers"`
do  
  nodes=""
  if [ $nodeType == "masters" ]
  then
    nodes=${MASTERS_DNS_NAMES}
  elif [ $nodeType == "etcds" ]
  then
    nodes=${ETCD_DNS_NAMES}
    echo "Testing SRV _etcd-server-ssl._tcp.${CLUSTER_NAME}.${BASE_DOMAIN}"
    IP=`dig _etcd-server-ssl._tcp.${CLUSTER_NAME}.${BASE_DOMAIN} SRV +short`
    if [ "$IP" != "" ]
    then
      echo "OK"
    else
      echo "----------------------------------------------------------------------------"
      echo "!!DNS _etcd-server-ssl._tcp.${CLUSTER_NAME}.${BASE_DOMAIN} is not configured!!"
      echo "!!For proceed the installation you need to configure all DNS listed before!!"
      echo "----------------------------------------------------------------------------"
      exit 1
    fi
  else
    nodes=${WORKERS_DNS_NAMES}
  fi
  sleep 2
  echo "------------------Testing $nodeType nodes dns names------------------"
  for nodeName in $OCP_API $OCP_APPS $nodes; do
    echo "Testing $nodeName.${CLUSTER_NAME}.${BASE_DOMAIN}"
    IP=`dig $nodeName.${CLUSTER_NAME}.${BASE_DOMAIN} +short`
    if [ "$IP" != "" ]
    then
      echo "OK"
    else
      echo "----------------------------------------------------------------------------"
      echo "!!DNS $nodeName.${CLUSTER_NAME}.${BASE_DOMAIN} is not configured!!"
      echo "!!For proceed the installation you need to configure all DNS listed before!!"
      echo "----------------------------------------------------------------------------"
      exit 1
    fi
  done
done

echo "Setting permission to $(whoami) user "
sudo chown $(whoami):$(whoami) ${OCP_USER_PATH} -R

echo "Downloading openshift-install cli"
if [ ! -f ${OCP_USER_PATH}/openshift-client-linux-${OCP_LATEST_VERSION}.tar.gz ]
then
    curl -s ${OCP_BASEURL}/openshift-client-linux-${OCP_LATEST_VERSION}.tar.gz | tar -xzf - -C ${OCP_USER_PATH} oc kubectl
    curl -s ${OCP_BASEURL}/openshift-install-linux-${OCP_LATEST_VERSION}.tar.gz | tar -xzf - -C ${OCP_USER_PATH} openshift-install
fi

echo "------------------TPreparing the install environments------------------T"

echo "Generating Manisfests files"
${OCP_USER_PATH}/openshift-install create manifests --dir=${OCP_USER_PATH}
sed -i 's/mastersSchedulable: true/mastersSchedulable: false/g' ${OCP_USER_PATH}/manifests/cluster-scheduler-02-config.yml

echo "Generating Ignitions files"
${OCP_USER_PATH}/openshift-install create ignition-configs --dir=${OCP_USER_PATH}

echo "Secondary Ignition config file for your bootstrap node to your computer"

cat <<EOF > ${OCP_USER_PATH}/append-bootstrap.ign
{
  "ignition": {
    "config": {
      "append": [
        {
          "source": "http://${OCP_BOOTSTRAP_IGN_DNSNAME}.${CLUSTER_NAME}.${BASE_DOMAIN}/ocp${OCP_USERID}/ignition/bootstrap.ign",
          "verification": {}
        }
      ]
    },
    "timeouts": {},
    "version": "2.1.0"
  },
  "networkd": {},
  "passwd": {},
  "storage": {},
  "systemd": {}
}
EOF

echo "Generating files in base64"

for i in append-bootstrap master worker
do
    base64 -w0 < $i.ign > $i.64
done

mkdir -p /var/www/html/ocp${OCP_USERID}/ignition

echo "Configuring RHCOS to TIER ${TIER}"
if [ ${TIER} == "vsphere" ]
then
    cd ${OCP_USER_PATH}/sharedfolder
    rm -rf ${OCP_USER_PATH}/sharedfolder/*

    echo "Downloading ${RHCOS_PACKAGES}/rhcos-4.3.0-x86_64-vmware.ova"
    curl ${RHCOS_PACKAGES}/rhcos-4.3.0-x86_64-vmware.ova -o nul -#
    
    cp -rv ${OCP_USER_PATH}/sharedfolder/rhcos-4.3.0-x86_64-vmware.ova /var/www/html/ocp${OCP_USERID}/ignition

    echo "Copy generated files .64 to ${OCP_USER_PATH}/sharedfolder/"
    cp -rv ${OCP_USER_PATH}/*.64  ${OCP_USER_PATH}/sharedfolder/
fi

echo "Initializing Apache to bastion"
if [ -f ${OCP_USER_PATH}/bootstrap.ign ]
then
  cp -rv ${OCP_USER_PATH}/bootstrap.ign /var/www/html/ocp${OCP_USERID}/ignition
fi

if [ -d ${OCP_USER_PATH}/auth ]
then
  cp -rv ${OCP_USER_PATH}/auth ${OCP_USER_PATH}/sharedfolder/
fi

echo "----------------------------------------------------------------------------------------------------"
echo "Files configurated on: ~/ocp/sharedfolder/"
echo "URL to access ignation and RHCOS OVA: http://${OCP_BOOTSTRAP_IGN_DNSNAME}.${CLUSTER_NAME}.${BASE_DOMAIN}/ocp${OCP_USERID}/ignition/"
echo "Openshift credentials files: ~/ocp/sharedfolder/auth"
echo "----------------------------------------------------------------------------------------------------"